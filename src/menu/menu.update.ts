import { Action, Command, Ctx, Hears, Update } from 'nestjs-telegraf';
import { TestService } from '../test/test.service';
import { MyContext } from '../common/data/dto/my-context.interface';
import { MenuService } from './menu.service';

@Update()
export class MenuUpdate {
  constructor(
    private testService: TestService,
    private menuService: MenuService,
  ) {}

  @Command('menu')
  @Hears(['üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', /^\/menu$/])
  @Action('open_menu')
  async handleMenu(@Ctx() ctx: MyContext) {
    console.log('üì• –ú–µ–Ω—é');
    await this.safeCb(ctx);
    await this.menuService.showMenu(ctx);
  }

  @Command('test')
  @Hears(['üß† –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç', /^\/test$/])
  @Action('start_test')
  async handleTest(@Ctx() ctx: MyContext) {
    await this.safeCb(ctx);
    await this.testService.startTest(ctx);
  }

  @Command('stats')
  @Hears(['üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', /^\/stats$/])
  @Action('my_stats')
  async handleStats(@Ctx() ctx: MyContext) {
    await this.safeCb(ctx);
    await this.testService.showStats(ctx);
  }

  // @Command('help')
  // @Hears(['‚ÑπÔ∏è –ü–æ–º–æ—â—å', /^\/help$/])
  // @Action('help')
  // async handleHelp(@Ctx() ctx: MyContext) {
  //   await this.safeCb(ctx);
  //   await ctx.reply(
  //     `‚ÑπÔ∏è *–ü–æ–º–æ—â—å*\n\n` +
  //     `üß† /test ‚Äî –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç\n` +
  //     `üìä /stats ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n` +
  //     `üè† /menu ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é`,
  //     { parse_mode: 'Markdown' },
  //   );
  // }

  private async safeCb(ctx: MyContext) {
    try {
      await ctx.answerCbQuery();
    } catch {}
  }
}
