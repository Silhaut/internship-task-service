import { Action, Command, Ctx, Update } from 'nestjs-telegraf';
import { TestService } from '../test/test.service';
import { MyContext } from '../data/dto/my-context.interface';

@Update()
export class MenuUpdate {
  constructor(private testService: TestService) {}

  @Command('menu')
  async onMenu(@Ctx() ctx: MyContext) {
    await this.showMenu(ctx);
  }

  @Action('main_menu')
  async onMainMenu(@Ctx() ctx: MyContext) {
    await ctx.answerCbQuery();
    await this.showMenu(ctx);
  }

  @Action('start_test')
  async onStartTest(@Ctx() ctx: MyContext) {
    await ctx.answerCbQuery();
    await this.testService.startTest(ctx);
  }

  @Action('my_stats')
  async onMyStats(@Ctx() ctx: MyContext) {
    await ctx.answerCbQuery();
    await this.testService.showStats(ctx);
  }

  @Action('help')
  async onHelp(@Ctx() ctx: MyContext) {
    await ctx.answerCbQuery();
    await ctx.reply(
      `‚ÑπÔ∏è *–ü–æ–º–æ—â—å*\n\n` +
        `üß† /test ‚Äî –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç\n` +
        `üìä /stats ‚Äî –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã\n` +
        `üè† /menu ‚Äî –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é`,
      { parse_mode: 'Markdown' },
    );
  }

  async showMenu(ctx: MyContext) {
    await ctx.reply('üìã –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', {
      reply_markup: {
        inline_keyboard: [
          [
            { text: 'üß† –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç', callback_data: 'start_test' },
            { text: 'üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data: 'my_stats' },
          ],
          [{ text: '‚ÑπÔ∏è –ü–æ–º–æ—â—å', callback_data: 'help' }],
        ],
      },
    });
  }
}
